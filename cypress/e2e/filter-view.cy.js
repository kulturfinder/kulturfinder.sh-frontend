describe('Filter View', () => {
  beforeEach(() => {
    cy.visit('http://localhost:8080')
    cy.url().should('include', '/de')
    cy.get('[data-cy=filtersCard]')
      .click()
    cy.url().should('include', '/filters')
  })

  it('Show main components', () => {
    cy.get('h1')
      .contains('Filter')
    cy.get('[data-cy=resetButton]')
    cy.get('[data-cy=results]')
    cy.get('[data-cy=categoriesLabel]')
    cy.get('[data-cy=filterCategories]')
    cy.get('[data-cy=tagsLabel]')
    cy.get('[data-cy=filterTags]')
    cy.get('[data-cy=resultsButton]')
  })

  it('Test categories functions', () => {
    cy.get('[data-cy="filterCategories"]')
      .should('not.be.checked')
    cy.get('[data-cy=categoriesLabel]')
      .click()
    cy.get('[data-cy=categoriesGroup]')
    cy.get('[data-cy="filterCategories"] :checked')
      .should('be.checked')
    // Check results
    cy.get('[data-cy=resultsButton]')
      .click()
    cy.url().should('include', '/map')
    cy.get('[data-cy="filterButton"]')
      .contains('7')
  })

  // Random selection of Tags (not all tags are tested)
  it('Test tags functions', () => {
    cy.get('[data-cy=tagsLabel]')
    cy.get('[data-cy="filterTags"]')
      .contains('Parkplatz')
      .should('have.css', 'background-color', 'rgba(0, 0, 0, 0)')
      .click()
    cy.get('[data-cy="filterTags"]')
      .contains('Gastronomie')
      .should('have.css', 'background-color', 'rgba(0, 0, 0, 0)')
      .click()
    cy.get('[data-cy="filterTags"]')
      .contains('Familienfreundlich')
      .should('have.css', 'background-color', 'rgba(0, 0, 0, 0)')
      .click()
    // Test if tag Buttons are activated
    cy.get('[data-cy="filterTags"]')
      .contains('Parkplatz')
      .should('have.css', 'background-color', 'rgb(0, 48, 100)')
    cy.get('[data-cy="filterTags"]')
      .contains('Gastronomie')
      .should('have.css', 'background-color', 'rgb(0, 48, 100)')
    cy.get('[data-cy="filterTags"]')
      .contains('Familienfreundlich')
      .should('have.css', 'background-color', 'rgb(0, 48, 100)')
    // Check results
    cy.get('[data-cy=resultsButton]')
      .click()
    cy.url().should('include', '/map')
    cy.get('[data-cy="filterButton"]')
      .contains('3')
    // Check if institution has selected filters
    cy.get('.tab-right')
      .click()
    cy.get(':nth-child(1) > .li-container')
      .click()
    cy.url().should('include', '/details')
    cy.get('[data-cy=institutionHeadline]')
    cy.get('[data-cy=institutionTags]')
      .contains('Parkplatz')
    cy.get('[data-cy=institutionTags]')
      .contains('Gastronomie')
    cy.get('[data-cy=institutionTags]')
      .contains('Familienfreundlich')
  })

  it('Test reset function', () => {
    // Filter categories
    cy.get('[data-cy="filterCategories"]')
      .should('not.be.checked')
    cy.get('[data-cy="filterCategories"] > :nth-child(3)')
      .click()
    cy.get('[data-cy="filterCategories"] > :nth-child(7)')
      .click()
    cy.get('[data-cy="filterCategories"] :checked')
      .should('be.checked')
      .and('have.value', 'Film', 'Wissen & Natur')
    // Filter tags
    cy.get('[data-cy="filterTags"]')
      .contains('Open Air')
      .click()
    cy.get('[data-cy="filterTags"]')
      .contains('Kostenfrei')
      .click()
    // Use reset button
    cy.get('[data-cy="resetButton"]')
      .click()
    // Check output reset button
    cy.get('[data-cy="filterCategories"]')
      .should('not.be.checked')
    cy.get('[data-cy="filterTags"]')
      .contains('Open Air')
      .should('have.css', 'background-color', 'rgba(0, 0, 0, 0)')
    cy.get('[data-cy="filterTags"]')
      .contains('Kostenfrei')
      .should('have.css', 'background-color', 'rgba(0, 0, 0, 0)')
  })
})
